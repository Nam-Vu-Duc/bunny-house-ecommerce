<div class="admin-create-employee-container">
  <form id="form-1" method="post" action="/admin/all-employees/employee/created" enctype="multipart/form-data">
    <div class="form-title">
      <p>Thêm nhân sự mới</p>
    </div>

    <div class="form-group">
      <select name="position">
        <option value="">-- Chọn vị trí --</option>
        <option value="employee">Nhân viên</option>
        <option value="admin">Quản trị viên</option>
      </select>
    </div>

    <div class="form-group">
      <select name="store">
        <option value="">-- Chọn cửa hàng làm việc --</option>
        {{#each stores}}
          <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>
    </div>

    <div class="form-group">
      <label for="name">Họ tên</label>
      <input type="text" class="form-control" id="name" name="name" placeholder="VD: Mai Hồng Vũ">
      <span class="form-message"></span>
    </div>

    <div class="form-group">
      <label for="email">Email</label>
      <input type="text" class="form-control" id="email" name="email" placeholder="VD: mhv@gmail.com">
      <span class="form-message"></span>
    </div>

    <div class="form-group">
      <label for="phone">Số điện thoại</label>
      <input type="text" class="form-control" id="phone" name="phone" placeholder="VD: 0987654321">
      <span class="form-message"></span>
    </div>

    <div class="form-group">
      <label for="address">Địa chỉ</label>
      <input type="text" class="form-control" id="address" name="address" placeholder="VD: Hà Nội">
      <span class="form-message"></span>
    </div>

    <div class="form-group">
      <label for="password">Mật Khẩu</label>
      <input type="password" class="form-control" id="password" name="password" placeholder="Aa">
      <span class="form-message"></span> 
    </div>

    <div class="form-group">
      <label for="password-confirm">Xác Nhận Mật Khẩu</label>
      <input type="password" class="form-control" id="password-confirm" name="password-confirm" placeholder="Aa">
      <span class="form-message"></span>
    </div>

    <div class="submit-button">
      <button title="submit" type="submit">Tạo</button>
    </div>
  </form>
</div>

<script>  
// executing validate
function validating(inputElement, rule, checkValidate, index) {
  var errorMessage = rule.test(inputElement.value)
  var errorElement = inputElement.parentElement.querySelector('.form-message')

  if (errorMessage) {
    errorElement.innerText = errorMessage
    inputElement.style.border = '2px solid red'
    inputElement.parentElement.style.color = 'red'
    checkValidate[index] = false
  } else {
    errorElement.innerText = ''
    inputElement.style.border = 'none'
    inputElement.parentElement.style.color = 'black'
    checkValidate[index] = true
  }
}  

// isRequiredString requires input must have string
function isRequiredString(selector) {
  return {
    selector: selector,
    test: function (value) {
      return value.trim() ? undefined : 'Chưa Nhập Kìa =((('
    }
  }
}

function isEmail(selector) {
  return {
    selector: selector,
    test: function (value) {
      var regex = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/
      return regex.test(value) ? undefined : 'Nhập Đúng Email Vô =((('
    }
  }
}

// isConfirmPassword requires reEnter password must be the same as the initial 
function isConfirmPassword(selector, getPasswordValue) {
  return {
    selector: selector,
    test: function (value) {
      return (value === getPasswordValue() && value !== '') ? undefined : "Mật Khẩu Chưa Trùng Rồi"
    }
  }
}

// validator function to validate input form from user
function validator(options) {
  var formElement = document.querySelector(options.form)
  var checkValidate = Array(6).fill(false)

  options.rules.forEach(function (rule, index) {
    var inputElement = formElement.querySelector(rule.selector)
    // input blur
    inputElement.onblur = function () {
      validating(inputElement, rule, checkValidate, index)
    }
  })

  formElement.onsubmit = function (e) {
    for (var i = 0; i < checkValidate.length; ++i) {
      if(checkValidate[i] === false) {
        e.preventDefault()
        options.rules.forEach(function (rule, index) {
          var inputElement = formElement.querySelector(rule.selector)
          validating(inputElement, rule, checkValidate, index)
        })
        break
      }
    }
  }
}

validator({
  form: '#form-1',
  errorSelector: '.form-message',
  rules: [
    isRequiredString('#name'),
    isEmail('#email'),
    isRequiredString('#phone'),
    isRequiredString('#address'),
    isRequiredString('#password'),
    isConfirmPassword('#password-confirm', function() {
      return document.querySelector('#form-1 #password').value
    })
  ]
})
</script>