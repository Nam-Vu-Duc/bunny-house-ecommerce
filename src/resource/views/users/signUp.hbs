<div class="sign-up-container">
  <div class="sign-up-form">
    {{!-- <img src="https://res.cloudinary.com/bunny-store/image/upload/v1711070715/web-img/4_lnwzuk.jpg"> --}}
    <img src="https://scontent.fhan2-5.fna.fbcdn.net/v/t39.30808-6/352741714_563563145718603_9057471481482946263_n.jpg?_nc_cat=106&ccb=1-7&_nc_sid=6ee11a&_nc_eui2=AeGw4AFoKHleOOuEAxVuso3bf56iaggbZh5_nqJqCBtmHooDsfJSxvBixX7VjZQ_IqDQIbvF0PUt7hV0NvSuZe9f&_nc_ohc=XhKZz5p9J4QQ7kNvgF3PZw3&_nc_ht=scontent.fhan2-5.fna&_nc_gid=ANpsniaTV251ycYZJOh57L3&oh=00_AYCvLACYAUWPfUZnKEgaZ9oQXaIcJZa9dqKPGGobZFKnng&oe=670F012D">
    <div class="form-input">
      <p class="form-title">Đăng ký</p>
      <form id="form-2" method="post" action="/authentication/creating-account">
        <div class="form-group">
          <input type="text" class="form-control" id="name" name="name" placeholder="Họ Tên">
          <span class="form-message"></span>
        </div>

        <div class="form-group">
          <input type="text" class="form-control" id="email" name="email" placeholder="Tài khoản">
          <span class="form-message"></span>
        </div>

        <div class="form-group">
          <input type="password" class="form-control" id="password" name="password" placeholder="Mật Khẩu">
          <span class="form-message"></span> 
        </div>

        <div class="form-group">
          <input type="password" class="form-control" id="password-confirm" name="password-confirm" placeholder="Xác Nhận Mật Khẩu">
          <span class="form-message"></span>
        </div>

        <div class="form-group">
          <p class="wrong-info">
          </p> 
        </div>

        <div class="form-action">
          <button title="submit" type="submit">Đăng Ký</button>
        </div>

        <div class="sign-in">
          <p>Đã có tài khoản ? </p>
          <a href="/authentication/sign-in"><p style="color: red; text-decoration:underline">Đăng nhập ngay thôi</p></a>
        </div>
      </form>
    </div>
  </div>
  
</div>

<script>
var wrongInfo = document.querySelector('p.wrong-info')
if (`{{error}}`) {
  wrongInfo.innerText = `{{error}}`
  wrongInfo.style.color = 'red'
}

// executing validate
function validating(inputElement, rule, checkValidate, index) {
    var errorMessage = rule.test(inputElement.value)
    var errorElement = inputElement.parentElement.querySelector('.form-message')

    if (errorMessage) {
      errorElement.innerText = errorMessage
      inputElement.parentElement.style.color = "red"
      checkValidate[index] = false
    } else {
      errorElement.innerText = ''
      inputElement.parentElement.style.color = "black"
      checkValidate[index] = true
    }
  }  

// isRequiredString requires input must have string
function isRequiredString(selector) {
  return {
    selector: selector,
    test: function (value) {
      return value.trim() ? undefined : 'Quên Chưa Nhập Kìa =((('
    }
  }
}

// isEmail requires input must be an email 
function isEmail(selector) {
  return {
    selector: selector,
    test: function (value) {
      var regex = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/
      return regex.test(value) ? undefined : 'Nhập Đúng Email Vô =((('
    }
  }
}

// isConfirmPassword requires reEnter password must be the same as the initial 
function isConfirmPassword(selector, getPasswordValue) {
  return {
    selector: selector,
    test: function (value) {
      return (value === getPasswordValue() && value !== '') ? undefined : "Mật Khẩu Chưa Trùng Rồi"
    }
  }
}

// validator function to validate input form from user
function validator(options) {
  var formElement = document.querySelector(options.form)
  var checkValidate = Array(4).fill(false)

  options.rules.forEach(function (rule, index) {
    var inputElement = formElement.querySelector(rule.selector)
    // input blur
    inputElement.onblur = function () {
      validating(inputElement, rule, checkValidate, index)
    }
  })

  formElement.onsubmit = function (e) {
    for (var i = 0; i < checkValidate.length; ++i) {
      if(checkValidate[i] === false) {
        e.preventDefault()
        options.rules.forEach(function (rule, index) {
          var inputElement = formElement.querySelector(rule.selector)
          validating(inputElement, rule, checkValidate, index)
        })
        break
      }
    }
  }
}

validator({
  form: '#form-2',
  errorSelector: '.form-message',
  rules: [
    isRequiredString('#name'),
    isEmail('#email'),
    isRequiredString('#password'),
    isConfirmPassword('#password-confirm', function() {
      return document.querySelector('#form-2 #password').value
    })
  ]
})

</script>